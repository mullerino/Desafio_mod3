# -*- coding: utf-8 -*-
"""Desafio_modulo3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l2W2AOX8iLYEcwMwfULlbZ5GyjqnVbn5

Ideia 01: Analisar a quantidade total de casos no interior e na região metropolitana e fazer a comparação, com isso, comprovar a elavada atenção recebida pela metropole em relação as cidade do interior, uma vez que a quantidade de pessoas que habita tais regiões são próximas.

Ideia 02: Analisar a relação entre a população e o número de caso das 5 cidades da rgm e do interior com mais casos de covid registrados no dataframe, tendo isso, realizar a construção de gráfico comparativo entre as porcentagens encontradas e finalizar a hipotese.

# Dados iniciais do Dataframe escolhido
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv("Dados-covid-19-municipios.csv", encoding = "ISO-8859-1", delimiter=';')
df

df.head()

df.info()

df.nunique()

df.describe()

"""# Tratando os dados dispostos no dataframe"""

df.drop(["Unnamed: 5", "Unnamed: 6", "Unnamed: 7"], axis=1, inplace=True)

df

dfn = df.dropna(axis = 0, how ='any') 
dfn

dfn['Mun_Total de casos'] = dfn['Mun_Total de casos'].astype('int64')
dfn['Mun_Total de óbitos'] = dfn['Mun_Total de óbitos'].astype('int64')

dfn

"""# Organizando as informações desejadas"""

casosInterior = 0
casosRGM = 0

for i in range(0,len(dfn['Mun_Total de casos'])):
  if(dfn['Grande região'][i] == 'Interior'):
    casosInterior = casosInterior + dfn['Mun_Total de casos'][i]
  else:
    casosRGM = casosRGM + dfn['Mun_Total de casos'][i]

total = casosInterior+casosRGM

df_cidadesInterior  = (dfn[dfn['Grande região'] == 'Interior'])
_cidadesInterior  = (dfn[dfn['Grande região'] == 'Interior'])['Município']
cidadesInterior = _cidadesInterior.to_numpy()
df_cidadesInterior

df_cidadesRGM  = (dfn[dfn['Grande região'] != 'Interior'])
_cidadesRGM  = (dfn[dfn['Grande região'] != 'Interior'])['Município']
cidadesRGM = _cidadesRGM.to_numpy()
df_cidadesRGM

plt.figure(figsize=(7,5))
plt.bar('Interior', casosInterior, color = 'maroon')
plt.bar('Metropolitana', casosRGM, color = 'maroon')
plt.xlabel("Região")
plt.ylabel("Quantidade de casos")
plt.title("Quantidade de casos por região")
plt.savefig("graf1.png") 
plt.show()

df_cidadesRGM

df_cidadesInterior

df_cidadesRGMT = df_cidadesRGM.sort_values(by='Mun_Total de casos', ascending=False)
df_cidadesRGMT = df_cidadesRGMT.reset_index(inplace=False)
df_cidadesRGMT = df_cidadesRGMT.drop(["index"], axis=1, inplace=False)
df_cidadesRGMT

df_cidadesInteriorT = df_cidadesInterior.sort_values(by='Mun_Total de casos', ascending=False)
df_cidadesInteriorT = df_cidadesInteriorT.reset_index(inplace=False)
df_cidadesInteriorT = df_cidadesInteriorT.drop(["index"], axis=1, inplace=False)
df_cidadesInteriorT

df_cidadesInterior5 = df_cidadesInteriorT.head(5)
df_cidadesInterior5

df_cidadesRGMA = df_cidadesRGMT.head(5)
df_cidadesRGMA

casos_5m = df_cidadesRGMA['Mun_Total de casos'].to_numpy()
cidades_5m = df_cidadesRGMA['Município'].to_numpy()
casos_5i = df_cidadesInterior5['Mun_Total de casos'].to_numpy()
cidades_5i = df_cidadesInterior5['Município'].to_numpy()

plt.figure(figsize=(9,5))
plt.barh(cidades_5m, casos_5m, color = 'yellowgreen')
plt.xlabel("Quantidade de casos")
plt.ylabel("Municípios")
plt.title("Os 5 Munícipios da região metropolitana com mais casos registrados")
plt.savefig('CasosRGM.png')
plt.show()

plt.figure(figsize=(9,5))
plt.barh(cidades_5i, casos_5i, color = 'yellowgreen')
plt.xlabel("Quantidade de casos")
plt.ylabel("Municípios")
plt.title("Os 5 Munícipios do interior com mais casos registrados")
plt.savefig('CasosInt.png')
plt.show()

"""
Cidades do interior:
*   Campinas: ~= 1 milhão
*   São José do Rio Preto	~= 470mil
*   São José dos Campos	~= 740mil
*   Sorocaba ~= 690mil
*   Ribeirão Preto ~= 720mil

Cidades da região met.:
*   São Paulo: ~= 12 milhões
*   Santo André	~= 730mil
*   Guarulhos	~= 1.4 milhão
*   São Bernardo do Campo	 ~= 850mil
*   Osasco ~= 700mil

"""

populacaoRGM = [12000000, 730000, 1400000, 850000, 700000]
populacaoInterior = [1000000, 470000, 740000, 690000, 720000]

relacaoPopCasosRGM = np.zeros(5)
relacaoPopCasosI = np.zeros(5)

for i in range(0,5):
  relacaoPopCasosRGM[i] = (df_cidadesRGMA['Mun_Total de casos'][i]*100)/populacaoRGM[i]
  relacaoPopCasosI[i] = (df_cidadesInterior5['Mun_Total de casos'][i]*100)/populacaoInterior[i]

mun_RGM = df_cidadesRGMA['Município'].to_numpy()
mun_I = df_cidadesInterior5['Município'].to_numpy()

barComp = 0.4
plt.figure(figsize=(9,5))

plt.barh(mun_RGM, relacaoPopCasosRGM, color = 'salmon', height = barComp , label = 'Metropolitana')
plt.barh(mun_I, relacaoPopCasosI, color = 'navy', height = barComp, label = 'Interior')
plt.xlabel('Porcentagem da população testada positivamente [%]')
plt.title('Relação entre a população de cada cidade e os casos registrados')
plt.legend()
plt.savefig("graf3.png") 
plt.show()

"""# Gerando relatório"""

pip install fpdf2

from fpdf import FPDF

pdf = FPDF('P', 'mm', 'A4') #orientação P - Retrato / L - Paisagem -- Unidade de medida -- Formato da folha

pdf.add_page()
pdf.set_font('Times', '', 16)

pdf.cell(195, 10, align='C', txt = 'Desafio final do módulo III', ln = True)
pdf.ln(5)

pdf.set_font('Times', '', 12)

texto =  'O projeto em questão tem como objetivo realizar uma análise dos dados fornecidos pelo Governo de São Paulo na página (seade.gov.br/coronavirus), a partir desses dados será comprovado um problema gerado pela pandemia do Covid-19.'
texto2 = 'Após realizar a organização do dataframe utilizado, pensou-se na seguinte questão: A quantidade de casos registrados nas cidades consideradas região metropolitana de SP é semelhante a quantidade registrada nos interiores de SP?'
texto3 = 'Com o questionamento feito, realizou-se as devidas manipulações no dataframe para obter a resposta desejada. Nesse sentido, o gráfico apresentado logo abaixo apresenta a primeira resposta para o questionamento.'
texto4 = 'Ao observar a figura acima, nota-se que a quantidade de casos nas cidades do interior de SP representam quase o dobro de casos registrados nas metrópoles, portanto, tal resposta comprova que a quantidade de casos não são semelhantes'
texto5 = 'A partir dessa resposta, realizou-se uma consulta no google em relação a quantidade de habitantes do Estado de São Paulo, que chega a aproximadamente 45 milhões de pessoas, sendo aproximadamente 22 milhões residentes das cidades metrópolitanas.'
texto6 = 'Partindo de tal afirmativa, surgiu uma nova indagação: Qual é a porcentagem de casos registrados em relação a população das 5 cidades da região metropolitana e do interior com maiores indices de casos? A resposta desse questionamento carrega uma conclusão de conhecimento público, a qual será exposta no decorrer da explicação.'
texto7 = 'Para responder o questionamento anterior, obteve-se os seguintes gráficos:'
texto8 = 'Nota-se que no segundo gráfico a escala está em milhão, por exemplo, a cidade de São Paulo registrou mais de 1 milhão de casos. Para obter as porcentagens dos casos em relação a população de cada cidade foi necessário consultar o google novamente para conhecer a quantidade de habitantes em cada cidade, obtendo:'
texto9 = 'Conhecendo tais valores, construi-se o seguinte gráfico:'
texto10 = 'Observando esse gráfico, nota-se que tal porcentagem é maior para as cidades do interior, como por exemplo na cidade de Campinas, a qual possui cerca de 20% da população contraiu o vírus. Por fim, conclui-se que há uma diferença entre as medidas tomadas nas cidades da metrópole em relação as cidades do interior, mesmo na capital de SP, a qual possui uma população extremamente grande, não existiu uma alta porcentagem de casos registrados'
texto11 = 'Portanto, o problema principal observado é a questão do excesso de atenção para as cidades metropolitanas e o "esquecimento" das demais cidades do Estado.'


pdf.multi_cell(0, 7, align='J', txt = texto)
pdf.ln(2)

pdf.multi_cell(0, 7, align='J', txt = texto2)
pdf.ln(2)

pdf.multi_cell(0, 7, align='J', txt = texto3)
pdf.ln(100)

pdf.image(name='graf1.png',x=45,y=90,w=120)

pdf.multi_cell(0, 7, align='J', txt = texto4)
pdf.ln(2)

pdf.multi_cell(0, 7, align='J', txt = texto5)
pdf.ln(2)

pdf.multi_cell(0, 7, align='J', txt = texto6)
pdf.ln(2)

pdf.multi_cell(0, 7, align='J', txt = texto7)

pdf.add_page()

pdf.image(name='CasosInt.png',x=30,y=15,w=150)
pdf.image(name='CasosRGM.png',x=30,y=95,w=150)

pdf.ln(180)
pdf.multi_cell(0, 7, align='J', txt = texto8)

pdf.image(name='populacao_cidadesSP.png',x=75,y=215,w=70)

pdf.add_page()

pdf.ln(10)

pdf.multi_cell(0, 7, align='J', txt = texto9)
pdf.ln(2)

pdf.image(name='graf3.png',x=35,y=30,w=150)

pdf.ln(85)
pdf.multi_cell(0, 7, align='J', txt = texto10)

pdf.ln(2)
pdf.multi_cell(0, 7, align='J', txt = texto11)

pdf.output('relatório.pdf')